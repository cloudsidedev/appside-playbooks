---

# file: playbooks/roles/web/tasks/apache2.yml

#
# % apache2ctl -V
#
# Server MPM:     prefork
#
#   12.04
#   StartServers          {{ conf_apache2_StartServers }}
#   MinSpareServers       {{ conf_apache2_MinSpareServers }}
#   MaxSpareServers       {{ conf_apache2_MaxSpareServers }}
#
#   MaxClients            {{ conf_apache2_MaxClients }}
#   MaxRequestsPerChild   {{ conf_apache2_MaxRequestsPerChild }}
#
#   14.04
#   StartServers             5
#   MinSpareServers          5
#   MaxSpareServers          10
#
#   MaxRequestWorkers        150
#   MaxConnectionsPerChild   0
#

- name: create /etc/apache2/conf.d (Debian family)
  file: path=/etc/apache2/conf.d state=directory owner=root group={{ conf_root_group }} mode=0755
  when: ansible_os_family == "Debian"
  tags: [ apache2 ]

- name: create /etc/httpd/sites-available and sites-enabled directory (RedHat family)
  file: path=/etc/httpd/{{ item }} state=directory owner=root group={{ conf_root_group }} mode=0755
  with_items:
    - sites-available
    - sites-enabled
  when: ansible_os_family == "RedHat"
  tags: [ apache2 ]

- name: deploy /etc/httpd/conf.d/custom-apache2-conf (RedHat family)
  template: src=etc/apache2/conf.d/custom-apache2-conf.j2 dest=/etc/httpd/conf.d/custom-apache2.conf owner=root group={{ conf_root_group }} mode=0644
  notify: handle_reload_apache2
  when: ansible_os_family == "RedHat"
  tags: [ apache2 ]

- name: adapt mpm_prefork /etc/apache2/mods-available/mpm_prefork.conf
  lineinfile:
    dest=/etc/apache2/mods-available/mpm_prefork.conf
    regexp="{{ item.key }}"
    line="{{ item.value }}"
  with_items:
    - { key: 'StartServers', value: 'StartServers {{ conf_apache2_StartServers }}' }
    - { key: 'MinSpareServers', value: 'MinSpareServers {{ conf_apache2_MinSpareServers }}' }
    - { key: 'MaxSpareServers', value: 'MaxSpareServers {{ conf_apache2_MaxSpareServers }}' }
    - { key: 'MaxRequestWorkers', value: 'MaxRequestWorkers {{ conf_apache2_MaxClients }}' }
    - { key: 'MaxConnectionsPerChild', value: 'MaxConnectionsPerChild {{ conf_apache2_MaxRequestsPerChild }}' }
  when: ( ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04" ) or ansible_distribution == "Debian"
  notify: handle_restart_apache2
  tags: [ apache2 ]

#
# Here should adapt: ~/ansible/playbooks/roles/web/templates/apache2/apache2-conf-12.04.j2
#
- name: adapt mpm_prefork on /etc/apache2/apache2.conf
  lineinfile:
    dest=/etc/apache2/apache2.conf
    regexp="{{ item.key }}"
    line="{{ item.value }}"
  with_items:
    - { key: 'StartServers', value: 'StartServers {{ conf_apache2_StartServers }}' }
    - { key: 'MinSpareServers', value: 'MinSpareServers {{ conf_apache2_MinSpareServers }}' }
    - { key: 'MaxSpareServers', value: 'MaxSpareServers {{ conf_apache2_MaxSpareServers }}' }
    - { key: 'MaxClients', value: 'MaxClients {{ conf_apache2_MaxClients }}' }
    - { key: 'MaxRequestsPerChild', value: 'MaxRequestsPerChild {{ conf_apache2_MaxRequestsPerChild }}' }
  when: ( ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04" ) or ansible_distribution == "Debian"
  notify: handle_restart_apache2
  tags: [ apache2 ]

- name: deploy apache2 conf (Debian family)
  template: src=etc/{{ item }}.j2 dest=/etc/{{ item }} owner=root group={{ conf_root_group }} mode=0644
  with_items:
    - apache2/conf.d/custom-apache2-conf
    - apache2/ports.conf
    - apache2/conf-available/security.conf
  notify: handle_restart_apache2
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: listen on 8080 (RedHat Family)
  lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="^Listen 80" state=present create=yes line="Listen 8080"
  when: ansible_os_family == "RedHat"
  # notify: handle_restart_apache2
  tags: [ varnish, varnish-conf, apache2 ]

- name: create /var/www/vhosts directory
  file: path=/var/www/vhosts state=directory owner={{ conf_www_group }} group={{ conf_www_group }} mode=0755
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: create /var/www/vhosts-archived directory
  file: path=/var/www/vhosts-archived state=directory owner=root group={{ conf_www_group }} mode=0755
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: create /var/www/html directory
  file: path=/var/www/html state=directory owner=root group={{ conf_www_group }} mode=0755
  tags: [ apache2, apache2-conf ]

- name: remove default /var/www index.html files
  file: path=/var/www/{{ item }} state=absent
  with_items:
    - index.html
    - html/index.html
  tags: [ apache2, apache2-conf ]

- name: index and health PHP templates
  template: src=etc/apache2/{{ item }}.j2 dest=/var/www/html/{{ item }}
  with_items:
    - index.php
    - health.php
  tags: [ apache2, apache2-conf ]

- name: symlink www index.php
  file: src=/var/www/html/index.php dest=/var/www/index.php state=link
  when: ansible_os_family == "Debian"
  tags: [ apache2, apache2-conf ]

#- name: disable all apache2 PHP modules
#  apache2_module: state=absent name={{ item }} force=yes
#  with_items:
#    - php7.1
#    - php5.6
#    - php5
#  when: ansible_os_family == "Debian"
#  ignore_errors: yes
#  tags: [ apache2, apache2-conf ]

- name: disable all apache2 mods-enabled PHP loads
  file: path=/etc/apache2/mods-enabled/{{ item }}.load state=absent
  with_items:
    - php7.1
    - php5.6
    - php5
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: disable all apache2 mods-enabled PHP confs
  file: path=/etc/apache2/mods-enabled/{{ item }}.conf state=absent
  with_items:
    - php7.1
    - php5.6
    - php5
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: enable apache2 modules
  apache2_module: state=present name={{ item }}
  with_items:
    - php{{ conf_php_version_debian_family }}
    - rewrite
    - rpaf
    - deflate
    - expires
    - headers
    - status
  notify: handle_reload_apache2
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ apache2, apache2-conf ]

- name: apache2 service state
  service: name=apache2 state=started enabled=yes
  when: ansible_os_family == "Debian"
  tags: [ apache2, apache2-conf ]
