---

# file: playbooks/roles/web/tasks/vhosts-enabled.yml

#
# create vhost gluster uploads if enabled
#
- name: create vhost gluster uploads if enabled (Common)
  file: path=/mnt/glusterfs/gvol0/brick1/uploads/{{ item.value.glusterfs_uploads }} state=directory owner=deploy group={{ conf_www_group }} mode=0775
  when: item.value.state == "enabled" and item.value.glusterfs_uploads is defined
  with_dict: '{{ conf_vhosts_common }}'
  tags: [ vhosts ]

- name: deploy 000-default vhost
  template: src=etc/apache2/vhost-000-default.conf.j2 dest=/etc/apache2/sites-available/000-default.conf
  when: ansible_os_family == "Debian"
  notify:
    - handle_reload_apache2
    - handle_restart_varnish
  tags: [ vhosts ]

- name: mv vhost from /var/www/vhosts-archived/ to vhosts/ if enabled (Common)
  shell: if [ -d /var/www/vhosts-archived/{{ item.key}} ]; then mv /var/www/vhosts-archived/{{ item.key}} /var/www/vhosts/; fi
  when: item.value.state == "enabled"
  with_dict: '{{ conf_vhosts_common }}'
  tags: [ vhosts ]

#
# create vhost root in /var/www/vhosts if enabled
#
- name: create vhost root in /var/www/vhosts if enabled (Common)
  file: path=/var/www/vhosts/{{ item.key}} state=directory owner=deploy group={{ conf_www_group }} mode=0755
  when: item.value.state == "enabled"
  with_dict: '{{ conf_vhosts_common }}'
  tags: [ vhosts ]

#
# make sure .htaccess file exists if enabled
#
- name: make sure .htaccess file exists if enabled (Common)
  file: path=/var/www/vhosts/{{ item.key }}/.htaccess owner=deploy group={{ conf_www_group }} mode=0664 state=touch
  when: item.value.state == "enabled" and conf_env != "development" and item.value.type != "wp_bedrock" and item.value.type != "typo3" and ansible_os_family == "Debian"
  with_dict: '{{ conf_vhosts_common }}'
  tags: [ vhosts ]

#
# deploy vhost templates
#
- name: deploy vhost templates if enabled (dev)
  template: src=etc/apache2/vhost-{{ conf_env }}-{{ item.value.type }}.conf.j2 dest=/etc/apache2/sites-available/{{ item.key }}.conf
  when: item.value.state == "enabled" and conf_env == "development" and ansible_os_family == "Debian"
  with_dict: '{{ conf_vhosts_common }}'
  notify:
    - handle_reload_apache2
    - handle_restart_varnish
  tags: [ vhosts ]

# testing == staging == production (/var/www/vhosts/foo/current/web)
# vhost-{{ conf_env }}-* templates are going to be obsoleted (/var/www/vhosts/foo/web)

- name: deploy vhost templates if enabled (non-dev)
  template: src=etc/apache2/vhost-{{ conf_env }}-{{ item.value.type }}.conf.j2 dest=/etc/apache2/sites-available/{{ item.key }}.conf
  when: item.value.state == "enabled" and conf_env != "development" and ansible_os_family == "Debian"
  with_dict: '{{ conf_vhosts_common }}'
  notify:
    - handle_reload_apache2
    - handle_restart_varnish
  tags: [ vhosts ]

# - name: deploy vhost templates if enabled (Common, prod)
#   template: src=etc/apache2/vhost-{{ conf_env }}-{{ item.value.type }}.conf.j2 dest=/etc/apache2/sites-available/{{ item.key }}.conf
#   when: item.value.state == "enabled" and conf_env == "production" and ansible_os_family == "Debian"
#   with_dict: '{{ conf_vhosts_common }}'
#   notify:
#     - handle_reload_apache2
#     - handle_restart_varnish
#   tags: [ vhosts ]

#
# Activate vhosts
#
- name: activate vhost if enabled (Common)
  file: src=/etc/apache2/sites-available/{{ item.key }}.conf dest=/etc/apache2/sites-enabled/{{ item.key }}.conf state=link
  when: item.value.state == "enabled" and ansible_os_family == "Debian"
  with_dict: '{{ conf_vhosts_common }}'
  notify: handle_reload_apache2
  tags: [ vhosts ]
