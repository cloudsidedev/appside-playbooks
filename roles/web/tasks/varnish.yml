---

# file: playbooks/roles/web/tasks/varnish.yml

#
# conf_varnish_version = { 3 | 41 | 51 }
#

- name: varnish Depencencies (Debian family)
  apt: pkg={{ item }} state=latest force=yes
  with_items:
    - debian-archive-keyring
    - gnupg
    - apt-transport-https
  tags: [ varnish, apache2 ]

- name: varnish apt-key (Debian family)
  apt_key:
    url: https://packagecloud.io/varnishcache/varnish{{ conf_varnish_version }}/gpgkey
    state: present
  when: ansible_os_family == "Debian" and conf_varnish_version != 3 and ansible_lsb.major_release|int < 18

  tags: [ varnish, apache2 ]

- name: varnish repo (Debian family)
  apt_repository: repo='deb https://packagecloud.io/varnishcache/varnish{{ conf_varnish_version }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main' state=present update_cache=yes
  when: ansible_distribution == "Ubuntu" and conf_varnish_version != 3 and ansible_lsb.major_release|int < 18
  ignore_errors: yes
  tags: [ varnish, apache2 ]

# - name: varnish repo src (Debian family)
#   apt_repository: repo='deb-src https://packagecloud.io/varnishcache/varnish{{ conf_varnish_version }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main' state=present update_cache=yes
#   when: ansible_distribution == "Ubuntu" and conf_varnish_version != 3 and ansible_lsb.major_release|int < 18
#   ignore_errors: yes
#   tags: [ varnish, apache2 ]

- name: be sure varnish package is installed (Debian family)
  apt: pkg={{ item }} state=latest force=yes
  with_items:
    - varnish
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ varnish, apache2 ]

- name: deploy varnish default conf (Debian family)
  template: src=etc/{{ item }}.j2 dest=/etc/{{ item }} owner=root group={{ conf_www_group }} mode=0644
  with_items:
    - default/varnish
  notify: handle_restart_varnish
  ignore_errors: yes
  when: ansible_os_family == "Debian"
  tags: [ varnish, varnish-conf, apache2 ]

- name: deploy varnish conf
  template: src=etc/{{ item }}-{{ conf_varnish_version }}.j2 dest=/etc/{{ item }} owner=root group={{ conf_www_group }} mode=0644
  with_items:
    - varnish/default.vcl
  notify: handle_restart_varnish
  ignore_errors: yes
  tags: [ varnish, varnish-conf, apache2 ]

- name: perms /etc/varnish/secret (Debian family)
  file: path=/etc/varnish/secret owner=root group=nagios mode=0640
  when:
      - ansible_os_family == "Debian"
      - conf_icinga_master == true or conf_icinga_satellite == true or conf_icinga_client == true
  tags: [ varnish, varnish-conf, apache2 ]

- name: Copy Debian Jessie/Xenial specific Varnish configs (systemd).
  template:
    src: lib/systemd/system/varnish.service.j2
    dest: "/lib/systemd/system/varnish.service"
    owner: root
    group: root
    mode: 0644
  when: >
    (ansible_distribution == 'Debian' and ansible_distribution_version|int >= 8) or
    (ansible_distribution == 'Ubuntu' and ansible_distribution_version.split(".")[0]|int >= 16)
  notify:
    - handle_reload_systemd
    - handle_restart_varnish
  tags: [ varnish, varnish-conf, apache2 ]

# - name: Ensure old role-managed Varnish systemd unit file is removed.
#   file:
#     path: /etc/systemd/system/varnish.service
#     state: absent
#   # when: varnish_systemd_config_path != '/etc/systemd/system'
#   tags: [ varnish, varnish-conf ]

- name: varnish service state
  service: name=varnish state=started enabled=yes
  tags: [ varnish, varnish-conf, apache2 ]
  