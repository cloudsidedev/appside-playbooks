---

# file: playbooks/roles/web/defaults/main.yml

#
# GlusterFS
#
conf_glusterfs_version: 3.6

#
# Memcached
#
conf_memcached_port: 11211
conf_memcached_listen_ip: 127.0.0.1
conf_memcached_user: memcache
conf_memcached_memory_limit: 64
conf_memcached_connections: 1024
conf_memcached_log_file: /var/log/memcached.log
conf_memcached_log_verbosity: ""

#
# MogileFS
#
conf_mogilefs_enable: false
conf_mogilefs_user: mogile
conf_mogilefs_group: mogile
conf_mogilefs_storage_path: /data/mogilefs

#
# ruby
#
conf_ruby_version_debian_family: 2.4

#
# Apache2
#
conf_mod_pagespeed: false
conf_apache_welcome: 'echo "Hello, World! I am a web server configured using <a href=\"https://github.com/ttssdev/appflow/\">AppFlow</a> running on: "; echo exec("hostname");'
conf_apache2_listen: |
  # NameVirtualHost *:8080
  Listen 8080
conf_apache2_StartServers: 5
conf_apache2_MinSpareServers: 5
conf_apache2_MaxSpareServers: 10
conf_apache2_MaxClients: 150
conf_apache2_MaxRequestsPerChild: 0

#
# nginx
#
conf_nginx_enable: false
# Used only for Debian/Ubuntu installation, as the -t option for apt.
conf_nginx_default_release: ""
# Used only for Redhat installation, enables source Nginx repo.
conf_nginx_yum_repo_enabled: true
# Use the official Nginx PPA for Ubuntu, and the version to use if so.
conf_nginx_ppa_use: true
conf_nginx_ppa_version: stable
# The name of the nginx package to install.
conf_nginx_package_name: "nginx"
conf_nginx_conf_template: "etc/nginx/nginx.conf.j2"
conf_nginx_vhost_template: "etc/nginx/vhost.j2"
conf_nginx_worker_processes: "{{ ansible_processor_vcpus | default(ansible_processor_count) }}"
conf_nginx_worker_connections: "1024"
conf_nginx_multi_accept: "off"
conf_nginx_error_log: "/var/log/nginx/error.log warn"
conf_nginx_access_log: "/var/log/nginx/access.log main buffer=16k flush=2m"
conf_nginx_sendfile: "on"
conf_nginx_tcp_nopush: "on"
conf_nginx_tcp_nodelay: "on"
conf_nginx_keepalive_timeout: "65"
conf_nginx_keepalive_requests: "100"
conf_nginx_server_tokens: "on"
conf_nginx_client_max_body_size: "64m"
conf_nginx_server_names_hash_bucket_size: "64"
conf_nginx_proxy_cache_path: ""
conf_nginx_extra_conf_options: ""
# Example extra main options, used within the main nginx's context:
#   conf_nginx_extra_conf_options: |
#     env VARIABLE;
#     include /etc/nginx/main.d/*.conf;
conf_nginx_extra_http_options: ""
# Example extra http options, printed inside the main server http config:
#    conf_nginx_extra_http_options: |
#      proxy_buffering    off;
#      proxy_set_header   X-Real-IP $remote_addr;
#      proxy_set_header   X-Scheme $scheme;
#      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_set_header   Host $http_host;
conf_nginx_remove_default_vhost: false
conf_nginx_vhosts: []
# Example vhost below, showing all available options:
# - listen: "80" # default: "80"
#   server_name: "example.com" # default: N/A
#   root: "/var/www/example.com" # default: N/A
#   index: "index.html index.htm" # default: "index.html index.htm"
#   filename: "example.com.conf" # Can be used to set the filename of the vhost file.
#
#   # Properties that are only added if defined:
#   server_name_redirect: "www.example.com" # default: N/A
#   error_page: ""
#   access_log: ""
#   error_log: ""
#   extra_parameters: "" # Can be used to add extra config blocks (multiline).
#   template: "" # Can be used to override the `conf_nginx_vhost_template` per host.
#   state: "absent" # To remove the vhost configuration.
conf_nginx_upstreams: []
# - name: myapp1
#   strategy: "ip_hash" # "least_conn", etc.
#   keepalive: 16 # optional
#   servers: {
#     "srv1.example.com",
#     "srv2.example.com weight=3",
#     "srv3.example.com"
#   }
conf_nginx_log_format: |
  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"'

#
# HHVM
#
conf_hhvm_enable: false
conf_hhvm_version: -lts-3.21

#
# PHP
#
conf_php_version_debian_family: 5.6

#
# VARNISH
#
conf_varnish_enable: true
conf_varnish_version: 3
conf_varnish_storage_backend: malloc,256m
conf_varnish_parameter_workspace_client: 64k
conf_varnish_backend_default: |
  .host = "127.0.0.1";
    .port = "8080";
    .max_connections = 800;
    # .connect_timeout = 180s; .first_byte_timeout = 180s; .between_bytes_timeout = 180s;
conf_varnish_backend_probe_default: |
  .probe = {
      .url = "/";
      .timeout = 1s;
      .interval = 1s;
      .window = 5;
      .threshold = 3;
    }
conf_varnish_backend_probe_mysql_default: |
  .probe = {
      .url = "/health.php";
      .timeout = 1s;
      .interval = 1s;
      .window = 5;
      .threshold = 3;
    }
conf_varnish_vcl_backend_response: |
  # Allow stale content, in case the backend goes down.
  # make Varnish keep all objects for 6 hours beyond their TTL
  set beresp.grace = 6h;
  # set beresp.grace = 2m;
conf_varnish_vcl_hash: |
  # Hash cookies for requests that have them.
  if (req.http.Cookie) {
      hash_data(req.http.Cookie);
  }

#
# rbenv
#
rbenv:
  env: system
  version: v1.0.0
  default_ruby: 2.3.3
  rubies:
    - version: 2.3.3

rbenv_clean_up: false

rbenv_repo: "https://github.com/rbenv/rbenv.git"

rbenv_owner: 'root'
rbenv_group: 'root'

rbenv_plugins:
  # - { name: "rbenv-vars",         repo: "https://github.com/rbenv/rbenv-vars.git",         version: "v1.2.0" }
  - { name: "ruby-build",         repo: "https://github.com/rbenv/ruby-build.git",         version: "master" }
  - { name: "rbenv-default-gems", repo: "https://github.com/rbenv/rbenv-default-gems.git", version: "ead67889c91c53ad967f85f5a89d986fdb98f6fb" }
  - { name: "rbenv-installer",    repo: "https://github.com/rbenv/rbenv-installer.git",    version: "bc21e7055dcc8f5f9bc66ce0c78cc9ae0c28cd7a" }
  - { name: "rbenv-update",       repo: "https://github.com/rkh/rbenv-update.git",         version: "1961fa180280bb50b64cbbffe6a5df7cf70f5e50" }
  - { name: "rbenv-whatis",       repo: "https://github.com/rkh/rbenv-whatis.git",         version: "v1.0.0" }
  - { name: "rbenv-use",          repo: "https://github.com/rkh/rbenv-use.git",            version: "v1.0.0" }

rbenv_root: "{% if rbenv.env == 'system' %}/usr/local/rbenv{% else %}~/.rbenv{% endif %}"

rbenv_users: []

rbenv_extra_depends: []
rbenv_apt_packages:
- build-essential
- git
- libcurl4-openssl-dev
- libffi-dev
- libreadline-dev
- libssl-dev
- libxml2-dev
- libxslt1-dev
- zlib1g-dev
rbenv_dnf_packages:
- gcc
- openssl-devel
- libyaml-devel
- readline-devel
- zlib-devel
- libffi-devel
- git
rbenv_yum_packages:
- bzip2
- gcc
- git
- libffi-devel
- libyaml-devel
- openssl-devel
- readline-devel
- zlib-devel

#
# Thumbor
#
conf_thumbor_enable: false
conf_thumbor_user: thumbor
conf_thumbor_group: thumbor
conf_thumbor_tmp_path: /opt/thumbor/tmp_store
conf_thumbor_log_path: /var/log/thumbor
conf_thumbor_backend_url: http://localhost:8888/unsafe
conf_thumbor_debug: false
conf_thumbor_img_db_host: localhost
conf_thumbor_remote_debug: false

#
# Serf
#
conf_serf_enable: false
conf_serf_user: serf
conf_serf_group: serf
conf_serf_perlbal_user: perlbal
conf_serf_perlbal_group: perlbal
conf_serf_download_url: https://releases.hashicorp.com/serf/0.8.1/serf_0.8.1_linux_amd64.zip
conf_serf_download_dir: /usr/local/src
conf_serf_version: 0.8.1
conf_serf_arch: linux_amd64
conf_serf_exe: /usr/local/bin/serf
