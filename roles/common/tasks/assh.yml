---

# file: playbooks/roles/common/tasks/assh.yml

- name: prepare install assh (Unix)
  lineinfile: dest=/etc/profile line="{{ item }}" state=present insertafter='EOF'
  with_items:
      - "export GOPATH=/usr/local/go"
      - "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin"
      - "alias ssh='assh wrapper ssh'"
  tags: [ assh ]

- name: set assh exports (zsh/bash) (Unix, root)
  lineinfile: dest=/root/{{ item[0] }} line="{{ item[1] }}" state=present insertafter='EOF'
  with_nested:
      - [ ".bashrc", ".zshrc" ]
      - [ "export GOPATH=/usr/local/go", "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin",  "alias ssh='assh wrapper ssh'" ]
  ignore_errors: yes
  tags: [ assh ]

- name: set assh exports (zsh/bash) (Unix, users)
  lineinfile: dest={{ item.value.home }}/.zshrc line="export GOPATH=/usr/local/go" state=present insertafter='EOF'
  with_dict: '{{ conf_users }}'
  when: item.value.state == "enabled"
  ignore_errors: yes
  tags: [ assh ]

- name: set assh exports (zsh/bash) (Unix, users)
  lineinfile: dest={{ item.value.home }}/.zshrc line="export PATH=$PATH:$GOROOT/bin:$GOPATH/bin" state=present insertafter='EOF'
  with_dict: '{{ conf_users }}'
  when: item.value.state == "enabled"
  ignore_errors: yes
  tags: [ assh ]

- name: set assh exports (zsh/bash) (Unix, users)
  lineinfile: dest={{ item.value.home }}/.zshrc line="alias ssh='assh wrapper ssh'" state=present insertafter='EOF'
  with_dict: '{{ conf_users }}'
  when: item.value.state == "enabled"
  ignore_errors: yes
  tags: [ assh ]

- name: set assh exports (zsh/bash) (Generic, personal)
  lineinfile: dest=~/{{ item[0] }} line="{{ item[1] }}" state=present insertafter='EOF'
  with_nested:
      - [ ".bashrc", ".zshrc" ]
      - [ "export GOPATH=/usr/local/go", "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin",  "alias ssh='assh wrapper ssh'" ]
  become: false
  ignore_errors: yes
  tags: [ assh ]

- name: install assh (Unix)
  shell: "export GOPATH=/usr/local/go ; go get -u github.com/moul/advanced-ssh-config/cmd/assh"
  when: ansible_os_family != "FreeBSD"
  tags: [ assh ]

- name: install assh (FreeBSD family)
  shell: "export GOPATH=/usr/local ; go get -u github.com/moul/advanced-ssh-config/cmd/assh"
  when: ansible_os_family == "FreeBSD"
  tags: [ assh ]

- name: create ControlPath directories (Unix, root)
  file: path=~/tmp/.ssh/cm state=directory owner=root group={{ conf_root_group }} mode=0755
  tags: [ assh, assh-conf ]

- name: create ControlPath directories (Unix, users)
  file: path={{ item.value.home }}/.ssh/cm state=directory owner={{ item.key }} group={{ item.key }} mode=0755
  with_dict: '{{ conf_users }}'
  when: item.value.state == "enabled"
  tags: [ assh, assh-conf ]

- name: create ~/.ssh/ (root)
  file: path=~/.ssh state=directory owner=root group={{ conf_root_group }} mode=0755
  tags: [ assh, assh-conf ]

- name: provision ~/.ssh/assh.yml (root)
  template: src=home/{{ item }}.j2 dest=$HOME/{{ item }} mode=0644
  with_items:
    - .ssh/assh.yml
  tags: [ assh, assh-conf ]

- name: provision ~/.ssh/assh.yml (home)
  template: src=home/{{ item }}.j2 dest=$HOME/{{ item }} mode=0644
  with_items:
    - .ssh/assh.yml
  become: false
  tags: [ assh, assh-conf ]

- name: provision ~/.ssh/assh.yml (Unix, users)
  template: src=home/.ssh/assh.yml.j2 dest={{ item.value.home }}/.ssh/assh.yml mode=0644
  with_dict: '{{ conf_users }}'
  when: item.value.state == "enabled"
  tags: [ assh, assh-conf ]
