---

# file: playbooks/roles/common/tasks/main.yml

# - import_tasks: net.yml
#   tags: [ common ]

# - import_tasks: apparmor.yml
#   tags: [ common, apparmor ]

- name: set root shell
  user: name=root shell={{ conf_root_shell }}
  tags: [ common, users, shell ]

- name: set hostname
  hostname: name={{ conf_hostname }}
  when: conf_hostname is defined
  tags: [ common, hostname ]

- import_tasks: mount.yml
  when: conf_mount_enable is defined and conf_mount_enable == true
  tags: [ common, mount, mount-conf ]

- import_tasks: locales.yml
  tags: [ locales ]

- import_tasks: fail2ban.yml
  when: conf_fail2ban_enable is defined and conf_fail2ban_enable == true
  tags: [ common, fail2ban ]

- import_tasks: ssh.yml
  tags: [ common, ssh, sshd ]

- import_tasks: sudo.yml
  tags: [ common, users, sudo ]

- import_tasks: sysctl.yml
  when: conf_sysctl_enable is defined and conf_sysctl_enable == true
  tags: [ common, sysctl, sysctl-conf ]

- import_tasks: cloud.yml
  when: conf_cloud_env is defined and conf_cloud_enable == true
  tags: [ common ]

# - name: define proxy settings
#   lineinfile: "dest=/etc/environment state=present line=http_proxy={{ conf_http_proxy }}"
#   when: set_http_proxy == true
#   tags: proxy

- name: deploy /etc/environment
  template: src=etc/environment.j2 dest=/etc/environment owner=root group={{ conf_root_group }} mode=0644
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "Ubuntu"
    - conf_http_proxy is defined
  tags: [ base_packages, yum_proxy, environment ]

- import_tasks: centos-epel.yml
  when: ansible_os_family == "RedHat" 
  tags: [ common, apt, base_packages, epel ]

- name: template /etc/hosts
  template: src=etc/hosts.j2 dest=/etc/hosts owner=root group={{ conf_root_group }} mode=0644 backup=no
  when: conf_hosts_fqdn is defined
  tags: [ common, hosts ]

- import_tasks: shared.yml
  when: conf_shared_enable is defined and conf_shared_enable == true
  tags: [ common, shared ]

- import_tasks: rc_local.yml
  when: conf_rc_local_enable is defined and conf_rc_local_enable == true
  tags: [ common, rc-local, rc-local-conf ]

- import_tasks: acl.yml
  when: conf_acl_enable is defined and conf_acl_enable == true
  tags: [ common, acl, acl-conf ]

- import_tasks: swapfile.yml
  when: conf_swapfile_enable is defined and conf_swapfile_enable == true
  tags: [ common, swapfile, swapfile-conf ]

- import_tasks: supervisor.yml
  when: conf_supervisor_enable is defined and conf_supervisor_enable == true
  tags: [ common, supervisor, supervisor-conf ]

- import_tasks: cron.yml
  tags: [ common, cron ]

- import_tasks: firewall.yml
  when: conf_firewall_enable is defined and conf_firewall_enable == true
  tags: [ common, firewall ]

- import_tasks: etckeeper.yml
  when: conf_etckeeper_webhook_url is defined
  tags: [ common ]

- import_tasks: timezone.yml
  tags: [ common ]

- import_tasks: rsyslog.yml
  when: conf_rsyslog_enable is defined and conf_rsyslog_enable == true
  tags: [ common, rsyslog ]

- import_tasks: lvm.yml
  tags: [ common ]

- import_tasks: jailkit.yml
  when: conf_jailkit_enable is defined and conf_jailkit_enable == true
  tags: [ common, jailkit, jails ]

- import_tasks: users.yml
  tags: [ common ]

- name: remove deb-src (Debian family)
  lineinfile: dest=/{{ conf_etc_path }}/apt/sources.list state=absent regexp='^deb-src'
  when: ansible_os_family == "Debian"
  tags: [ common ]

- import_tasks: base_packages.yml
  tags: [ common, apt, base_packages ]

- import_tasks: git.yml
  when: conf_git_enable is defined and conf_git_enable == true
  tags: [ common, git ]

- import_tasks: docker.yml
  when: conf_docker_enable is defined and conf_docker_enable == true
  tags: [ common, docker ]

- import_tasks: ansible.yml

- import_tasks: assh.yml
  # tags: [ common, assh, assh-conf, base_packages ]

- import_tasks: autossh.yml

- import_tasks: nullmailer.yml
  when: conf_nullmailer_enable == true
  tags: [ common, nullmailer ]

- import_tasks: snmpd.yml
  when: conf_snmpd_enable is defined and conf_snmpd_enable == true
  tags: [ common, snmpd ]

- import_tasks: nfs.yml
  # when: conf_nfs_enable is defined and conf_nfs_enable == true
  tags: [ common, nfs ]

# Bash prompt
# - copy: src=../files/profile/nicer-bash-prompt.sh dest=/{{ conf_etc_path }}/profile.d/Z999-nicer-bash-prompt.sh owner=root group={{ conf_root_group }} mode=644
#   when: ansible_os_family == "Debian"
#  tags: [ common, prompt ]

- import_tasks: motd.yml
  tags: [ common, motd ]

- import_tasks: apticron.yml
  when: ansible_os_family == "Debian"
  tags: [ common ]

- import_tasks: redis.yml
  when: conf_redis_enable is defined and conf_redis_enable == true
  tags: [ common, redis ]

- import_tasks: vsftpd.yml
  when: conf_vsftpd_enable is defined and conf_vsftpd_enable == true
  tags: [ common, vsftpd, vsftpd-conf ]

- import_tasks: sftp.yml
  when: conf_sftp_enable is defined and conf_sftp_enable == true
  tags: [ common, sftp, sftp-conf ]

# - import_tasks: vpn.yml
#   when: conf_vpn_netname is defined
#   tags: [ common ]

- import_tasks: letsencrypt.yml
  # when:
  #   - conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true
  #   - conf_letsencrypt_master is defined and conf_letsencrypt_master == true
  #   - conf_letsencrypt_cron_master is defined and conf_letsencrypt_cron_master == true
  tags: [ common, letsencrypt ]

- import_tasks: icinga.yml
  when: conf_icinga_master is defined or conf_icinga_satellite is defined or conf_icinga_client is defined
  tags: [ common ]

- import_tasks: zabbix.yml
  when: conf_zabbix_enable is defined and conf_zabbix_enable == true
  tags: [ common, zabbix, zabbix-conf, zabbix-agent, zabbix-agent-conf ]

- import_tasks: munin.yml
  when: conf_munin_master is defined or conf_munin_client is defined
  tags: [ common ]

- import_tasks: borg.yml
  when: conf_backup_client == true
  tags: [ common ]

- name: include custom playbook tasks
  include_tasks: "{{ item.src }}"
  when: conf_custom_playbook_enable is defined and conf_custom_playbook_enable == true and item.state|default('disabeld') == 'enabled'
  with_items: "{{ conf_custom_playbook_import_tasks }}"
  tags: [ common, custom ]
