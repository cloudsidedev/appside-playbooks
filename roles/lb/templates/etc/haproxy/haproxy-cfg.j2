#
# --- THIS FILE IS AUTOMATICALLY PROVISIONED THROUGH ANSIBLE ---
#
# % haproxy -f /etc/haproxy/haproxy.cfg -c
#

global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket {{ conf_haproxy_socket_path }}/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:EECDH+AES256:EDH+AES256:EECDH+AES128:EDH+AES:RSA+AESGCM:RSA+AES:!aNULL:!eNULL:!LOW:!EXPORT:!MEDIUM:!MD5:!PSK:!RSAPSK:!SRP:!DSS:!CAMELLIA:!RC4:!3DES
    # ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA
    ssl-default-bind-options no-sslv3 no-tls-tickets

    # Setting tune.ssl.default-dh-param to 1024 by default, if your workload permits it you should set it to at least 2048
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    http
    # option  httplog
    option  dontlognull

    maxconn 10000
    timeout connect 5000
    timeout client  50000
    timeout server  50000

    errorfile 400 {{ conf_haproxy_errors_path }}/400.http
    errorfile 403 {{ conf_haproxy_errors_path }}/403.http
    errorfile 408 {{ conf_haproxy_errors_path }}/408.http

{% if conf_haproxy_userlist is defined %}
  # USERSLIT
  {{ conf_haproxy_userlist }}
{% endif %}

#######
# WWW #
#######
frontend www-frontend
    mode {{ conf_haproxy_www_mode }}
    compression algo gzip
    compression type text/html text/plain text/javascript application/javascript application/xml application/json text/css image/svg+xml
    timeout client 5000

{% if conf_haproxy_www_mode == "http" %}
    option httplog
    reqidel ^X-Forwarded-.*:.*
    reqidel ^X-Host.*:.*
    option forwardfor
    option http-server-close
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
{% endif %}

{% if conf_haproxy_www_request is defined %}
    # request
    {{ conf_haproxy_www_request }}
{% endif %}

{% if conf_haproxy_www_redirect is defined %}
    # redirect
    {{ conf_haproxy_www_redirect }}
{% endif %}

{% if conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true %}
{% if conf_haproxy_letsencrypt_backend is defined %}
    # ACL Let’s Encrypt
    acl app_letsencrypt path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if app_letsencrypt
{% endif %}
{% endif %}

{% if conf_haproxy_www_acl is defined %}
    # ACL
    {{ conf_haproxy_www_acl }}
{% endif %}

{% if conf_haproxy_www_ssl_request is not defined %}
{% if conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true %}
{% if conf_haproxy_letsencrypt_backend is defined %}
    # See: http://comments.gmane.org/gmane.comp.web.haproxy/18273
    bind :443 ssl crt /etc/certs/ crt /mnt/glusterfs/gvol0/brick1/certs {{ conf_haproxy_alpn }}
{% endif %}
{% else %}
{% if conf_haproxy_disable_ssl is defined and conf_haproxy_disable_ssl == true %}
    # SSL disabled by conf_haproxy_disable_ssl: true
{% else %}
    # See: http://comments.gmane.org/gmane.comp.web.haproxy/18273
    bind :443 ssl crt /etc/certs/ {{ conf_haproxy_alpn }}
{% endif %}
{% endif %}
{% endif %}
    bind :80

{% if conf_haproxy_www_mode == "http" %}
    stats enable
      stats uri /lb
      stats realm Haproxy\ Statistics
      stats auth {{ conf_lbtier_stats_auth }}
{% endif %}

    default_backend {{ conf_haproxy_www_default_backend }}

{% if conf_haproxy_www_ssl_request is defined %}
###########
# WWW-SSL #
###########
frontend www-ssl-frontend
    mode {{ conf_haproxy_www_ssl_mode }}
    compression algo gzip
    compression type text/html text/plain text/javascript application/javascript application/xml application/json text/css image/svg+xml
    timeout client 5000

{% if conf_haproxy_www_ssl_mode == "http" %}
    option httplog
    option forwardfor
    option http-server-close
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
{% endif %}

{% if conf_haproxy_www_ssl_request is defined %}
    # request
    {{ conf_haproxy_www_ssl_request }}
{% endif %}

{% if conf_haproxy_www_ssl_redirect is defined %}
    # redirect
    {{ conf_haproxy_www_ssl_redirect }}
{% endif %}

{% if conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true %}
{% if conf_haproxy_letsencrypt_backend is defined %}
    # ACL Let’s Encrypt
    acl app_letsencrypt path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if app_letsencrypt
{% endif %}
{% endif %}

{% if conf_haproxy_www_ssl_acl is defined %}
    # ACL
    {{ conf_haproxy_www_ssl_acl }}
{% endif %}

{% if conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true %}
{% if conf_haproxy_letsencrypt_backend is defined %}
    # See: http://comments.gmane.org/gmane.comp.web.haproxy/18273
    bind :443 ssl crt /etc/certs/ crt /mnt/glusterfs/gvol0/brick1/certs {{ conf_haproxy_alpn }}
{% endif %}
{% else %}
{% if conf_haproxy_disable_ssl is defined and conf_haproxy_disable_ssl == true %}
    # SSL disabled by conf_haproxy_disable_ssl: true
{% else %}
    # See: http://comments.gmane.org/gmane.comp.web.haproxy/18273
    bind :443 ssl crt /etc/certs/ {{ conf_haproxy_alpn }}
{% endif %}
{% endif %}

{% if conf_haproxy_www_ssl_mode == "http" %}
    stats enable
      stats uri /lb
      stats realm Haproxy\ Statistics
      stats auth {{ conf_lbtier_stats_auth }}
{% endif %}

    default_backend {{ conf_haproxy_www_ssl_default_backend }}
{% endif %}

backend www-backend
    mode http
    balance {{ conf_haproxy_www_backend_balance }}
    # capture cookie vgnvisitor= len 32
    cookie SERVERID insert indirect nocache httponly secure
    # option forwardfor
    # option httpchk # THIS BREAKS GRACE
    # option httpclose
    # rspidel ^Set-cookie:\ IP=
    {{ conf_haproxy_www_backend }}

{% if conf_haproxy_www_alt_backend_http is defined %}
################
# WWW-ALT-HTTP #
################
backend www-alt-backend-http
    mode http
    balance {{ conf_haproxy_www_alt_backend_http_balance }}
    # option httpchk
    {{ conf_haproxy_www_alt_backend_http }}
{% endif %}

{% if conf_haproxy_www_alt_backend_https is defined %}
#################
# WWW-ALT-HTTPS #
#################
backend www-alt-backend-https
    balance {{ conf_haproxy_www_alt_backend_https_balance }}
    {{ conf_haproxy_www_alt_backend_https }}
{% endif %}

{% if conf_haproxy_docker_registry_backend is defined %}
###################
# DOCKER-REGISTRY #
###################
backend docker-registry-backend
    mode http
    balance {{ conf_haproxy_docker_registry_backend_balance }}
    option httpchk
    {{ conf_haproxy_docker_registry_backend }}
{% endif %}

{% if conf_haproxy_www_maintenance_backend is defined %}
###################
# WWW-MAINTENANCE #
###################
backend www-maintenance-backend
    mode http
    balance {{ conf_haproxy_www_maintenance_backend_balance }}
    option httpchk
    {{ conf_haproxy_www_maintenance_backend }}
{% endif %}

{% if conf_haproxy_pxc_backend is defined %}
#######
# PXC #
#######
frontend pxc-frontend
    mode tcp
    bind *:3307
    default_backend pxc-backend

backend pxc-backend
    mode tcp
    balance {{ conf_haproxy_pxc_backend_balance }}
    option httpchk
    # stick-table type ip size 2
    # stick on dst
    timeout server 90m
    {{ conf_haproxy_pxc_backend }}
{% endif %}

{% if conf_haproxy_monitoring_backend is defined %}
##############
# monitoring #
##############
backend monitoring-backend
    mode http
    acl authokay_basic_users http_auth(basic_users)
    http-request auth if !authokay_basic_users
    balance {{ conf_haproxy_monitoring_backend_balance }}
    option httpchk
    {{ conf_haproxy_monitoring_backend }}
{% endif %}

{% if conf_haproxy_grafana_backend is defined %}
###########
# grafana #
###########
backend grafana-backend
    mode http
    # acl authokay_basic_users http_auth(basic_users)
    # http-request auth if !authokay_basic_users
    balance {{ conf_haproxy_grafana_backend_balance }}
    # option httpchk
    {{ conf_haproxy_grafana_backend }}
{% endif %}

{% if conf_letsencrypt_enable is defined and conf_letsencrypt_enable == true %}
{% if conf_haproxy_letsencrypt_backend is defined %}
###############
# LETSENCRYPT #
###############
backend letsencrypt-backend
    mode http
    balance {{ conf_haproxy_letsencrypt_backend_balance }}
    {{ conf_haproxy_letsencrypt_backend }}
{% endif %}
{% endif %}

{% if conf_haproxy_misc_backend is defined %}
{{ conf_haproxy_misc_backend }}
{% endif %}
